package Image
	import public Colors

	public constant int IMAGE_LEVEL_1 = 1
	public constant int IMAGE_LEVEL_2 = 3
	public constant int IMAGE_LEVEL_3 = 2
	public constant int IMAGE_LEVEL_4 = 4
		
	/** Create an image at the target location, the Image has to be a blp, with transparent borders */
	public function createImage(string path, vec2 pos, real sizeX, real sizeY) returns image
		return CreateImage(path, sizeX, sizeY, 0, pos.y, pos.x, 0, sizeX / 2, sizeY / 2, 0, 1)
	
	/** Create an image at the target location, the Image has to be a blp, with transparent borders.
	The imageLevel specifis which image overlaps an other: Level 1 is always on the top, and level 4 always in the background. Use the constants "imageLevel_x" */
	public function createImage(string path, vec2 pos, real sizeX, real sizeY, int imageLevel) returns image
		if imageLevel > 0 and imageLevel < 5
			return CreateImage(path, sizeX, sizeY, 0, pos.y, pos.x, 0, sizeX / 2, sizeY / 2, 0, imageLevel)
		else
			printError("Invaild image level")
			return null
				
	/** Shows the image */
	public function image.show()
		SetImageRenderAlways(this, true)
	
	/** Hides the image */
	public function image.hide()
		SetImageRenderAlways(this, false)
		
	/** Shows the image for a specific player  */
	public function image.showForPlayer(player p)
		if GetLocalPlayer() == p
			SetImageRenderAlways(this, true)
		
	/** Hides the image for a specific player */
	public function image.hideForPlayer(player p)
		if GetLocalPlayer() == p
			SetImageRenderAlways(this, true)
			
	/** Set the image 2D position */
	public function image.setPos(vec2 pos)
		SetImagePosition(this, pos.x, pos.y, 0)
	
	/** Set the image 3D position */	
	public function image.setPos(vec3 pos)
		SetImagePosition(this, pos.x, pos.y, 0)
		SetImageConstantHeight(this, true, pos.z)
		
	/** Set the image height */	
	public function image.setHeight(real z)
		SetImageConstantHeight(this, true, z)
		
	/** Set the image color by using the colorA tuple */		
	public function image.setColor(colorA col)
		SetImageColor(this, col.red, col.green, col.blue, col.alpha)
		
	/** Set the image color by using the color tuple */		
	public function image.setColor(color col)
		SetImageColor(this, col.red, col.green, col.blue, 255)
		
	/** Set the image level (use the constants) */		
	public function image.setLevel(int level)
		SetImageType(this, level)
		
	/** Destroy the image */		
	public function image.remove()
		if this != null
			DestroyImage(this)
		else
			printError("Nullpointer exeption by destroying an image")
	

endpackage
